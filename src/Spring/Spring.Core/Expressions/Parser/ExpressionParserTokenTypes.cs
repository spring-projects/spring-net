// $ANTLR 2.7.6 (2005-12-22): "Expression.g" -> "ExpressionLexer.cs"$

namespace Spring.Expressions.Parser;

public class ExpressionParserTokenTypes
{
    public const int EOF = 1;
    public const int NULL_TREE_LOOKAHEAD = 3;
    public const int EXPR = 4;
    public const int OPERAND = 5;
    public const int FALSE = 6;
    public const int TRUE = 7;
    public const int AND = 8;
    public const int OR = 9;
    public const int XOR = 10;
    public const int IN = 11;
    public const int IS = 12;
    public const int BETWEEN = 13;
    public const int LIKE = 14;
    public const int MATCHES = 15;
    public const int NULL_LITERAL = 16;
    public const int LPAREN = 17;
    public const int SEMI = 18;
    public const int RPAREN = 19;
    public const int ASSIGN = 20;
    public const int DEFAULT = 21;
    public const int QMARK = 22;
    public const int COLON = 23;
    public const int PLUS = 24;
    public const int MINUS = 25;
    public const int STAR = 26;
    public const int DIV = 27;
    public const int MOD = 28;
    public const int POWER = 29;
    public const int BANG = 30;
    public const int DOT = 31;
    public const int POUND = 32;
    public const int ID = 33;
    public const int DOLLAR = 34;
    public const int COMMA = 35;
    public const int AT = 36;
    public const int LBRACKET = 37;
    public const int RBRACKET = 38;
    public const int PROJECT = 39;
    public const int RCURLY = 40;
    public const int SELECT = 41;
    public const int SELECT_FIRST = 42;
    public const int SELECT_LAST = 43;
    public const int TYPE = 44;
    public const int QUOTE = 45;
    public const int STRING_LITERAL = 46;
    public const int LAMBDA = 47;
    public const int PIPE = 48;
    public const int LITERAL_new = 49;
    public const int LCURLY = 50;
    public const int INTEGER_LITERAL = 51;
    public const int HEXADECIMAL_INTEGER_LITERAL = 52;
    public const int REAL_LITERAL = 53;
    public const int EQUAL = 54;
    public const int NOT_EQUAL = 55;
    public const int LESS_THAN = 56;
    public const int LESS_THAN_OR_EQUAL = 57;
    public const int GREATER_THAN = 58;
    public const int GREATER_THAN_OR_EQUAL = 59;
    public const int WS = 60;
    public const int BACKTICK = 61;
    public const int BACKSLASH = 62;
    public const int DOT_ESCAPED = 63;
    public const int APOS = 64;
    public const int NUMERIC_LITERAL = 65;
    public const int DECIMAL_DIGIT = 66;
    public const int INTEGER_TYPE_SUFFIX = 67;
    public const int HEX_DIGIT = 68;
    public const int EXPONENT_PART = 69;
    public const int SIGN = 70;
    public const int REAL_TYPE_SUFFIX = 71;
}
